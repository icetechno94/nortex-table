{"remainingRequest":"/home/icetechno/.nvm/versions/node/v12.9.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/icetechno/Work/plugins/nortex-table/src/NortexTable.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/icetechno/Work/plugins/nortex-table/src/NortexTable.vue","mtime":1567375148557},{"path":"/home/icetechno/.nvm/versions/node/v12.9.1/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/icetechno/.nvm/versions/node/v12.9.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/icetechno/Work/plugins/nortex-table/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/icetechno/.nvm/versions/node/v12.9.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/icetechno/.nvm/versions/node/v12.9.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.table-per-page select{\n    width: 65px\n}\n.table-search input {\n    min-width: 200px\n}\n.multiselect__single{\n    margin: 4px 0;\n}\n.multiselect__tag{\n    margin-bottom: 0;\n    margin-top: 3px;\n}\n.multiselect__content-wrapper{\n    min-width: max-content;\n}\nselect, input, .multiselect__tags {\n    border: 1px solid rgba(0, 0, 0, .2);\n    border-radius: 4px;\n    min-height: 45px!important;\n}\n.sorting{\n    position: relative;\n    padding-right: 30px!important;\n    cursor: pointer;\n&:before, &:after{\n               position: absolute;\n               bottom: 0.9em;\n               display: block;\n               opacity: 0.3;\n           }\n&:before{\n     right: 1em;\n     content: \"\\2191\";\n }\n&:after{\n     right: 0.5em;\n     content: \"\\2193\";\n }\n&.asc:before, &.desc:after{\n                   opacity: 1;\n               }\n}\n\n.fade-enter-active, .fade-leave-active {\n    transition: opacity .2s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active до версии 2.1.8 */ {\n    opacity: 0;\n}\n",{"version":3,"sources":["NortexTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"NortexTable.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div class=\"nortex-table\">\n        <div class=\"card\">\n            <slot name=\"card-header\"></slot>\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-md-end align-items-start\">\n                    <label class=\"mr-2 flex-grow-1 table-per-page\" v-if=\"enable_pagination\">\n                        <span>{{perPageLabels.per_page}} </span>\n                        <select\n                                name=\"perPageSelect\"\n                                class=\"form-control form-control-sm\"\n                                v-model=\"perPage\"\n                        >\n                            <option :value=\"perPage\" v-if=\"!perPageDropdown.includes(perPage)\">{{perPage}}</option>\n                            <option\n                                    v-for=\"(option, idx) in perPageDropdown\"\n                                    :key=\"'rows-dropdown-option-' + idx\"\n                                    :value=\"option\"\n                            >{{ option }}</option>\n                            <option :value=\"totalRecords\">{{perPageLabels.all}}</option>\n                        </select>\n                    </label>\n                    <div class=\"d-md-inline-flex\">\n                        <label class=\"order-sm-last table-search align-self-end\" v-if=\"this.enable_search\">\n                            <span>{{searchLabel}}</span>\n                            <input\n                                    type=\"search\"\n                                    class=\"form-control form-control-sm\"\n                                    v-model=\"search_string\"\n                            >\n                        </label>\n                        <div class=\"mr-md-2 align-self-end\" v-for=\"filter in currentFilters\" :key=\"filter.option_name\">\n<!--                            <table-filter-->\n<!--                                    :ref=\"filter.option_name\"-->\n<!--                                    :default_selected=\"filter.default_selected\"-->\n<!--                                    :multiple=\"filter.multiple\"-->\n<!--                                    :option_name=\"filter.option_name\"-->\n<!--                                    :options=\"filter.options\"-->\n<!--                                    :title=\"filter.title\"-->\n<!--                                    @selected=\"onFilterSelected\"-->\n<!--                            ></table-filter>-->\n                        </div>\n<!--                        <datetime-filter-->\n<!--                                v-if=\"DateTimeFilter\"-->\n<!--                                :title=\"DateTimeFilter.title\"-->\n<!--                                :time_from=\"DateTimeFilter.time_from\"-->\n<!--                                :time_to=\"DateTimeFilter.time_to\"-->\n<!--                                @changed=\"onTimeChanged\"-->\n<!--                        ></datetime-filter>-->\n                    </div>\n                </div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <table-column\n                                :columns=\"columns\"\n                                :sort_by=\"sortBy\"\n                                :sort_type=\"sortType\"\n                                :columns_row=\"columns_row\"\n                                :enable_sort=\"enable_sort\"\n                                @sort-changed=\"onSortChanged\"\n                        ></table-column>\n                        <transition name=\"fade\" mode=\"out-in\">\n                            <tbody v-if=\"emit_data_up\" key=\"emit\">\n                            <slot name=\"empty\" v-bind:empty_text=\"localization.empty || $t('table.empty')\"></slot>\n                            <slot name=\"content\"></slot>\n                            <slot name=\"last_row\"></slot>\n                            </tbody>\n                            <tbody v-else-if=\"loading\" key=\"loading\">\n                            <tr>\n                                <td :colspan=\"allColumns.length\">\n                                    <p  class=\"d-flex justify-content-center\">\n                                                <span>\n                                                    {{localization.loading || $t('table.loading')}}\n                                                </span>\n                                    </p>\n                                </td>\n                            </tr>\n                            </tbody>\n                            <tbody v-else-if=\"data.length === 0\" key=\"empty\">\n                            <tr>\n                                <td :colspan=\"allColumns.length\">\n                                    <p  class=\"d-flex justify-content-center\">\n                                            <span>\n                                                {{localization.empty || $t('table.empty')}}\n                                            </span>\n                                    </p>\n                                </td>\n                            </tr>\n                            </tbody>\n                            <tbody v-else key=\"data\">\n                            <tr v-for=\"(row, index) in data\"\n                                :key=\"'row' + index\"\n                                :class=\"rowClass(row)\"\n                            >\n                                <td v-for=\"(column, index) in allColumns\"\n                                    :key=\"'row elem' + index\"\n                                    v-if=\"row[column.field] !== undefined\"\n                                >\n                                    <div v-if=\"column.field === 'actions'\">\n                                        <div class=\"btn-group\">\n                                            <a v-for=\"action in row.actions\"\n                                               :key=\"action.title\"\n                                               :class=\"action.button_class\"\n                                               :href=\"action.url\"\n                                               v-tooltip=\"action.title\"\n                                               v-if=\"action.action === 'link'\"\n                                            >\n                                                <i :class=\"action.icon_class\"></i>\n                                            </a>\n                                            <button v-for=\"action in row.actions\"\n                                                    :key=\"action.title\"\n                                                    :class=\"action.button_class\"\n                                                    @click=\"runAction(action)\"\n                                                    v-tooltip=\"action.title\"\n                                                    v-if=\"action.action !== 'link'\"\n                                            >\n                                                <i :class=\"action.icon_class\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div v-else-if=\"row[column.field] && row[column.field].customize\">\n                                        <slot\n                                                :name=\"row[column.field].name\"\n                                                v-bind:[row[column.field].name]=\"row[column.field].items\"\n                                        ></slot>\n                                    </div>\n                                    <span v-else v-html=\"row[column.field]\"></span>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </transition>\n                    </table>\n                </div>\n                <table-pagination\n                        v-if=\"enable_pagination\"\n                        :current_per_page=\"perPage\"\n                        :total_records=\"totalRecords\"\n                        :current_page=\"page\"\n                        :labels=\"paginationLabels\"\n                        @page-changed=\"onPageChange\"\n                ></table-pagination>\n            </div>\n        </div>\n        <slot name=\"after_content\"></slot>\n    </div>\n</template>\n\n<script>\n    import TableColumn from \"./TableColumn\";\n    import TablePagination from \"./TablePagination\";\n    // import TableFilter from \"./TableFilter\";\n    // import DatetimeFilter from \"./DatetimeFilter\";\n    export default {\n        name: \"NortexTable\",\n        components: {TablePagination, TableColumn},\n        props: {\n            columns: Array,\n            columns_row: {\n                type: Number,\n                default: 1\n            },\n            api_url: String,\n            localization: {\n                type: Object,\n                default: () => {\n                    return {\n                        next: null,\n                        prev: null,\n                        per_page: null,\n                        of: null,\n                        search: null,\n                        page: null,\n                        all: null,\n                        loading: null,\n                        empty: null,\n                        first: null,\n                        last: null\n                    }\n                }\n            },\n            default_sort: {\n                type: Object,\n                default: () => {\n                    return {\n                        field: 'created_at',\n                        type: 'desc'\n                    }\n                }\n            },\n            enable_search: {\n                type: Boolean,\n                default: true\n            },\n            filters: {\n                type: Array,\n                default: () => []\n            },\n            enable_sort: {\n                type: Boolean,\n                default: true\n            },\n            enable_pagination: {\n                type: Boolean,\n                default: true\n            },\n            default_per_page: {\n                type: Number,\n                default: 10\n            },\n            emit_data_up: {\n                type: Boolean,\n                default: false\n            },\n            change_url:{\n                type: Boolean,\n                default: true\n            }\n        },\n        data() {\n            return {\n                data: [],\n                loading: true,\n                perPageLabels: {\n                    per_page: this.localization.per_page  || this.$i18n.t('table.per_page'),\n                    all: this.localization.all || this.$i18n.t('table.all'),\n                },\n                searchLabel: this.localization.search || this.$i18n.t('table.search'),\n                perPage: this.default_per_page,\n                perPageDropdown: [10, 20, 30],\n                paginationLabels: {\n                    next: this.localization.next || this.$i18n.t('table.next'),\n                    prev: this.localization.prev || this.$i18n.t('table.prev'),\n                    of: this.localization.of || this.$i18n.t('table.of'),\n                    first: this.localization.first || this.$i18n.t('table.first'),\n                    last: this.localization.last || this.$i18n.t('table.last'),\n                },\n                page: 1,\n                totalRecords: 0,\n                sortBy: this.default_sort.field,\n                sortType: this.default_sort.type,\n                serverParams: {},\n                searchParams: {},\n                timeout: '',\n                search_string: '',\n                search: location.search.substring(1)\n            }\n        },\n        watch: {\n            serverParams(){\n                this.loadItems();\n            },\n            search_string(val){\n                this.updateParams({search: val});\n            },\n            perPage(val){\n                this.updateParams({perPage: val});\n            },\n        },\n        mounted() {\n            this.setSearchParams();\n            this.rebuildTable();\n        },\n        computed: {\n            currentFilters(){\n                return this.filters.filter((filter) => {\n                    return filter.customize !== 'time'\n                });\n            },\n            allColumns(){\n                let data = [];\n                this.columns.map((item)=> {\n                    if (item.children && item.children.length > 0) {\n                        item.children.map((elem)=>{data.push(elem)});\n                    } else {\n                        data.push({field: item.field, label: item.label, sortable: item.sortable})\n                    }\n                });\n                return data;\n            },\n            DateTimeFilter(){\n                let datetimeFilter = this.filters.filter((filter) => {\n                    return filter.customize === 'time'\n                });\n                return datetimeFilter.length > 0 ? datetimeFilter[0] : false;\n            },\n        },\n        methods: {\n            rowClass(row){\n                return row.row_class !== undefined ? row.row_class : ''\n            },\n            setSearchParams(){\n                let search = this.search;\n                if (search === ''){\n                    this.searchParams = {};\n                } else {\n                    this.searchParams = JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}')\n                }\n                if (this.enable_pagination){\n                    if (this.searchParams.page === undefined){\n                        this.searchParams.page = this.page\n                    }\n                    if (this.searchParams.perPage === undefined){\n                        this.searchParams.perPage = this.perPage\n                    }\n                }\n                if (this.enable_sort) {\n                    if (this.searchParams.sortBy === undefined) {\n                        this.searchParams.sortBy = this.sortBy\n                    }\n                    if (this.searchParams.sortType === undefined) {\n                        this.searchParams.sortType = this.sortType\n                    }\n                }\n            },\n            rebuildTable(){\n                this.prepareParams();\n                this.updateParams(this.searchParams);\n            },\n            prepareParams(){\n                let that = this;\n                if (this.enable_pagination) {\n                    this.perPage = parseInt(this.searchParams.perPage, 10) || this.perPage;\n                    this.page = parseInt(this.searchParams.page, 10) || 1;\n                }\n                if (this.enable_search){\n                    this.search_string = this.searchParams.search || '';\n                }\n                if (this.enable_sort) {\n                    this.sortType = this.searchParams.sortType || this.default_sort.type;\n                    this.sortBy = this.searchParams.sortBy || this.default_sort.field;\n                }\n                if (this.DateTimeFilter){\n                    if (that.searchParams.time_from){\n                        that.DateTimeFilter.time_from = that.searchParams.time_from;\n                    }\n                    if (that.searchParams.time_to){\n                        that.DateTimeFilter.time_to = that.searchParams.time_to;\n                    }\n                }\n                this.currentFilters.map(function (filter) {\n                    if (that.searchParams[filter.option_name] !== undefined){\n                        let data = filter.options.filter(function (option) {\n                            return that.searchParams[filter.option_name].split(',').includes(option.id.toString())\n                        });\n                        that.$refs[filter.option_name][0].selectOptions(data);\n                        that.searchParams[filter.option_name] = data.map(function (option) {\n                            return option.id\n                        });\n                    }\n                });\n            },\n            runAction(action) {\n                if (action.action === 'link') {\n                    location.replace(action.url)\n                } else {\n                    this.$emit(action.action, action.url, action.params)\n                }\n            },\n            updateParams(newProps) {\n                this.serverParams = Object.assign({}, this.serverParams, newProps);\n                if (this.change_url){\n                    let query = Object.keys(this.serverParams).map(key => key + '=' + this.serverParams[key]).join('&');\n                    history.replaceState({}, null, '?' + query);\n                }\n            },\n            onPageChange(params) {\n                this.page = params.currentPage;\n                this.updateParams({page: params.currentPage});\n            },\n            onSortChanged(params){\n                this.sortType = params.sortType;\n                this.sortBy = params.sortBy;\n                this.updateParams({sortBy: this.sortBy, sortType: this.sortType});\n            },\n            onFilterSelected(params) {\n                this.updateParams(params);\n            },\n            onTimeChanged(params){\n                this.updateParams(params);\n            },\n            loadItems() {\n                let that = this;\n                clearTimeout(that.timeout);\n                that.timeout = setTimeout(function () {\n                    that.loading = true;\n                    axios.get(that.api_url, {params: that.serverParams})\n                        .then(({data}) => {\n                            if (that.emit_data_up){\n                                that.$emit('emit_data', data)\n                            } else {\n                                that.totalRecords = data.recordsTotal;\n                                that.data = data.data;\n                                that.loading = false;\n                            }\n                        });\n                }, 500);\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .table-per-page select{\n        width: 65px\n    }\n    .table-search input {\n        min-width: 200px\n    }\n    .multiselect__single{\n        margin: 4px 0;\n    }\n    .multiselect__tag{\n        margin-bottom: 0;\n        margin-top: 3px;\n    }\n    .multiselect__content-wrapper{\n        min-width: max-content;\n    }\n    select, input, .multiselect__tags {\n        border: 1px solid rgba(0, 0, 0, .2);\n        border-radius: 4px;\n        min-height: 45px!important;\n    }\n    .sorting{\n        position: relative;\n        padding-right: 30px!important;\n        cursor: pointer;\n    &:before, &:after{\n                   position: absolute;\n                   bottom: 0.9em;\n                   display: block;\n                   opacity: 0.3;\n               }\n    &:before{\n         right: 1em;\n         content: \"\\2191\";\n     }\n    &:after{\n         right: 0.5em;\n         content: \"\\2193\";\n     }\n    &.asc:before, &.desc:after{\n                       opacity: 1;\n                   }\n    }\n\n    .fade-enter-active, .fade-leave-active {\n        transition: opacity .2s;\n    }\n    .fade-enter, .fade-leave-to /* .fade-leave-active до версии 2.1.8 */ {\n        opacity: 0;\n    }\n</style>"]}]}